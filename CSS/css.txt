CSS:
- CSS the language to style Web/HTML page
- CSS :Cascadig style sheet

Inline: 
Inner style:
External:
 .css 
 Ex. styles.css

To link with HTML file:
 <link> 
 rel="stylesheet" 
 href=""
  
Extrnal file Uses:
1. We can apply single css file on multiple Web pages
2. Code sepration : maintains of Code
3. Code optimization
4. We can change CSS of any selector, on multiple web pages using single change

CSS comments:
/* */ single comment

/*

multiline comments

*/

CSS syntax:
selector{
    propety: value;
}

CSS selector:
1. Simple selector: 
    i.Name: html tag/ element name
    ii. Id: '#' 
    iii. Class:

ii. Id selector:
HTML : id as attribute : ex. <p id="myParagraph"> 
css: #myParagraph
Ex.
#myParagraph{
    color:green;
}

iii. Class selector: 
HTML: class as attribute: ex. <p class="myParagraphs">
css : .myParagraphs  
Ex. .myParagraphs{
    color: blue;
}

Grouping selector:
h1{
    color: red;
}
p{
    color: red;
}

h1,p{
    color:red
}

Universal selector:
* - all
*{
    margin: 0;
    padding: 0;
}


Day2:
Color:
background-color: //background color
color: //text color
border-color: // border color

Color values:
1. Color Name (140)
    Ex. red, blue, green, etc

    p{
        color:green;
    }

2. RGB : Red Green Blue : Intensity of color
    red: rgb(255,0,0)
    green : rgb(0, 255, 0)
    black: rgb(0,0,0)
    white: rgb(255,255,255)

    rgb(0-255, 0-255, 0-255)

    p{
        color : rgb(0, 255, 0)
    }


    Gray shades:
    rgb(60,60,60)

    a - alpha (opatcity/transpernecy)
    rgba - Red Blue Green alpha value
    alpha value 0.0-1.0
    0.0- full transpernecy
    1.0- no transpernecy
     red: rgb(255,0,0)
     red: rgba(255,0,0,1)

3. HEX: 00 00 00 - FFFFFF

prefix : #rrggbb

   rr gg bb : 00-ff 00-ff 00-ff

   red: #f00 : #ff0000
   green: #0f0
   blue: #00f

    p{
        color: #00ff00 /*green*/
    } 

    white rgb(255,255,255) #ffffff
    black rgb(0,0,0) #000000

    rr gg bb : 00 00 00
    #000 

4. hsl : hue(color Intensity) saturation(gray shades) lightness(a -)
Hue : hsl(h, s, l) 0-360
r - 0 -119 red
g - 120-239
b - 240-360

lightness:
0% - black
100% - white

saturation: 0%-100% (Gray shades)

lightness: opatcity/transpernecy 0%-100%
50% - neither dark nor light

green: hsl(120,0%,100%)

red: hsl(0, 100%, 50%)

hsla : hue saturation lightness alpha

background-color:  hsl(240,100%,50%);

Day 3:

background:

1. background-color: color name, rgb, rgba, hex, hsl, hsla

2. background-image: url('') (relative path of your image)
html support for image:
.jpg/jpeg
.png
.gif

3. background-repeat: repeat (default)
                 : repeat-x (horizontally)
                 : repeat-y (vertically)
                 : no-repeat (none)  

4.  background-attachment : fixed
                          : scroll 
                          
5. background-position: top left
                        top right
                        bottom left
                        bottom right

6. background-size: auto
                  : inherit
                  : content
                  : cover                          

7. background (shorthand) : background-color background-image background-repeat background-attachment background-position;


position: top right bottom left

position: relative;
right:0

HTML elements position:
1. static : default. Normal flow. How we written elements in our html file. Top, right, bottom, left won't work with position static.

2. relative: render with normal flow. you can use here top, right, bottom, left.
It will create gap. Other element will not fill that gap.

3. fixed: screen/view port/ borwser  
position: fixed
top: 0;
right:0

It will not create gap.

4. absolute:
1. parent position: relative
2. position: absolute

5. sticky: Its a combination of relative and fixed

Box Model:
 1. border
 2. margin
 3. padding
 4. content
    1. height: height and actual height , min-height, max-height
    2. width: width and actual width, min-width, max-width

Border:
border shorthand propety:
- border: width(op) style(req) color(op)
Ex.: border: 1px solid black;(It will apply on top, right, bottom, left)   

1. Border width:
- apply on 4 positions
- Units in px,pt,em,cm,etc (11 px ) => (11px)
- thick, thin, medium

border-width: 1px; (t,r,b,l)
            : 2px 3px (t/b, r/l)
            : 2px 3px 4px 5px (2px-t,r,b,l)
            : 5px 15px 10px (5px, 15px- l,r, 10px-b)

border-width: 3px;
border-top-width:  5px 
border-top-width: 1px; (t,r,b,l)
            : 2px 3px (t/b, r/l)
            : 2px 3px 4px 5px (2px-t,r,b,l)
            : 5px 15px 10px (5px, 15px- l,r, 10px-b)

border-right-width
border-bottom-width
border-left-width


2. Border style:
-apply on 4 positions
-types
    - solid
    - dotted
    - dashed
    - groove
    - ridge
    - inset
    - outset
    - none
    - hidden 


                t     r    b       l
border-style: solid dotted dashed double
               t,r,b,l 
            : solid    (shorthand)
               t,b  l,r
            :solid dashed
                t     r,l    b
            : solid dotted dashed

border-style-top:  solid dotted dashed double
               t,r,b,l 
            : solid    (shorthand)
               t,b  l,r
            :solid dashed
                t     r,l    b
            : solid dotted dashed       

border-right-style
border-bottom-style
border-left-style

3. Border Color:
border-color: name,rgb,rgba,hex
               t,r,b,l 
            : red    (shorthand)
               t,b  l,r
            :red green
                t     r,l    b
            : red green yellow white  

border-top-color : black
border-right-color : black
border-bottom-color: black
border-left-color : black


Border to specific position:
border-top: width style color
border-right: width style color
border-bottom: width style color
border-left: width style color
Ex.: border-top: 1px solid black;

Border Radius:
border-radius: px,pt,cm,em,etc (In case we want rounded corners)

margin:
- To create space around html elements.
- Space outside border

Shorthand propety:
margin: 10px; (t/r/b/l)
margin: 10px 5px;(t/b, l/r)
margin: 10px 5px 15px;(t, r/l, b)
margin: 2px 4px 6px 8px;(t, r, b, l)

margin-top:
margin-right:
margin-left:
margin-bottom:

values:
1. auto; // borwser calculated
2. length: px,pt,em,pt,cm
3. %: for left and right margin: specifies margin in % of width of that element
    : for top and bottom margin: specifies margin in % of height of that element
4. inherit : values gets inherited from its parent

* We can specify negative values for margin

You can set the margin as auto to place your html element horizontally center with its container.(You must need to specify width)

margin collapse:
div: margin-bottom; : 50px;
div: margin: 80px;

div
 |
 |
 |
 |
 |
div 

padding:
To create space between content and border.
- inside border

Shorthand propety:
padding: 5px; (4postions)
padding: 5px 10px (t/b, l/r)
padding: 5px 10px 15px;(t, r/l, b)
padding: 5px 10px 5px 10px;(t, r, b, l)

padding-top:
padding-right:
padding-bottom:
padding-left:

values:
1. length: px,pt,cm,em,etc
2. %: for left and right padding: specifies padding in % of width of that element
    : for top and bottom padding: specifies padding in % of height of that element
3. inherit

* negative values are not allowed.

height and width:
content height/width
actual width : content width + padding + border
actual height : content height + padding + border

box-sizing: content-box(default) | border-box | intial | inherit

div{
    height: 20px; //content height
    width: 20px; // content width
    box-sizing: content-box;   
}

div{
    width: 200px;
    height: 200px;
    padding: 0px 20px;
    margin: 25px;
}

div{
    height: 60px;
    padding: 15px 20px;
    border: 5px solid black;
    box-sizing: border-box;
    margin: 25px;
}

min-width / max-width:

max-width : To set maximum width of your element/content. content is lesser than your max-width it will not show any effect. But if device width is smaller than your ma-width then it will increase height.

width < max-width // max-width ignore
width > max-width // width

min-width: to set minimum width of your html content/element 
            content is larger than specified min-width it will not show any effect but if your device width is smaller than min-width it will add scroll




div{
    width: 150px;
    height: 100px;
              t   r   b   l  
    padding: 2px 3px 4px 5px;
            t/r/b/l
    border: 2px solid black;
    box-sizing : content-box;
}

total/actual width = left(padding+border)+
                     content width/width +
                     right(padding+border)
                    = 5px + 2px+ 150px + 3px + 2px
                    = 162px

total/actual height = 

                    = 110px

box-sizing : content-box(default value) | 
             border-box |
             intial |
             inherit                       


box-sizing: border-box             

div{
    width: 150px;
    height: 100px;
              t   r   b   l  
    padding: 2px 3px 4px 5px;
            t/r/b/l
    border: 2px solid black;
   box-sizing: border-box ;
}
actual height/ total height = top(border+padding)+
                              content height +
                               bottom(border+padding) 
                        100 = 2px+2px+x+2px4px
                        100 = 10px+x
                        x = 100-10
                        x= 90px

content width = 138px

div{
    width: 150px;
    height: 100px;
    padding: 5px;
    border-top: 2px solid black;
}